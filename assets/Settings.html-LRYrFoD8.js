import{_ as a,c as o,a as e,b as t,d as n,e as l,r as c,o as p}from"./app-D-LXcV_B.js";const d={},r={href:"https://shopify.dev/docs/storefronts/themes/architecture/settings",target:"_blank",rel:"noopener noreferrer"},g={href:"https://shopify.dev/docs/storefronts/themes/architecture/settings/dynamic-sources",target:"_blank",rel:"noopener noreferrer"};function u(h,s){const i=c("ExternalLinkIcon");return p(),o("div",null,[s[4]||(s[4]=e("h1",{id:"settings-的一些配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#settings-的一些配置"},[e("span",null,"Settings 的一些配置")])],-1)),e("p",null,[s[1]||(s[1]=n("参考文档")),e("a",r,[s[0]||(s[0]=n("Settings")),l(i)])]),s[5]||(s[5]=t(`<h2 id="概述部分" tabindex="-1"><a class="header-anchor" href="#概述部分"><span>概述部分</span></a></h2><p>Settings 是通过 JSON 定义，可让商家在主题编辑器里配置，如颜色、字体、布局等.</p><p>设置可分为三种级别：主题(Theme)级别（global），section 级别，block 级别，分别对应不同的编辑范围.</p><p>这种设置是可以选择是固定的也可以选择是可交互变化的。设置的值可以是静态的值，也可以设置动态源(这里相当于一个绑定的变量，随着变量的更改，所设置的值也会同步更改。)</p><h3 id="settings-分类" tabindex="-1"><a class="header-anchor" href="#settings-分类"><span>Settings 分类</span></a></h3><p>Setinggs 分为两类：</p><ol><li><p><code>Input settings</code>:可以保存值且可由应用用户配置的设置。</p></li><li><p><code>Sidebar settings</code>:无法保存值且应用用户无法配置的设置。它们是信息元素，可用于为您的输入设置提供详细信息和清晰度。</p></li></ol><h3 id="setting-一般所在的位置" tabindex="-1"><a class="header-anchor" href="#setting-一般所在的位置"><span>Setting 一般所在的位置</span></a></h3><ol><li><code>config</code>文件夹下的<code>setting_schema.json</code>文件</li><li><code>sections</code>文件夹下的<code>liquid文件</code>的一个代码段。(比如<code>main-product.liquid</code>里面使用<code>{% schema %}...{% endschema %}</code>包裹的 <code>Settings</code> 字段)</li></ol><h3 id="setting-按照级别分类" tabindex="-1"><a class="header-anchor" href="#setting-按照级别分类"><span>Setting 按照级别分类</span></a></h3><p><code>settings_schema.json</code>:控制主题编辑器的主题设置区域的内容。此文件中的设置转换为全局主题设置，可以通过 Liquid 设置对象访问。(<strong>theme 级别</strong>)</p><p><code>Section schema</code>:在这里使用 <code>{% schema %}</code> 可以创建 <code>section settings</code> 和 <code>block settings</code>.这些设置可以分别通过 section 对象和 block 对象的 settings 属性访问。(<strong>section 和 block 级别</strong>)</p><p><code>settings</code>定义为一个 JSON 设置属性，该属性是应用设置的对象的父级。此属性接受一系列设置。<code>Input settings</code>和<code>Sidebar settings</code>都使用标准架构属性。</p><p><code>visible_if</code>:大多数设置类型都可以使用它来进行有条件的控制。</p><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><ol><li><code>Accessing setting values</code>:访问设置值</li></ol><p>可以通过以下三个 liquid 对象访问设置</p><ul><li><code>The global settings object</code></li><li><code>The section object</code></li><li><code>The block object</code></li></ul><p>要访问特定的设置，就要关联 id 属性到要访问的对象。</p><p>根据文档的设置，对于 3 个级别的 setting 如果都有以下设置</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span> <span class="token comment">//?</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token comment">//这里的id是可以自定义的</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Message&quot;</span><span class="token punctuation">,</span> <span class="token comment">//标签也会一同输出。</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello!&quot;</span> <span class="token comment">// 默认值</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么输入以下内容</p><div class="language-input line-numbers-mode" data-highlighter="prismjs" data-ext="input" data-title="input"><pre><code><span class="line">// Settings</span>
<span class="line">Message: {{ settings.message }}</span>
<span class="line"></span>
<span class="line">// Section</span>
<span class="line">Message: {{ section.settings.message }}</span>
<span class="line"></span>
<span class="line">// Block</span>
<span class="line">Message: {{ block.settings.message }}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将会导致这样的输出</p><div class="language-output line-numbers-mode" data-highlighter="prismjs" data-ext="output" data-title="output"><pre><code><span class="line">// Settings</span>
<span class="line">Message: Hello!</span>
<span class="line"></span>
<span class="line">// Section</span>
<span class="line">Message: Hello!</span>
<span class="line"></span>
<span class="line">// Block</span>
<span class="line">Message: Hello!</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>Checking the setting value format</code>:检查设置值格式</li></ol><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>要注意检查设置值的格式.</p><p>任何没有自动默认值的设置最终都可能没有值，这会转换为空字符串 。</p><p>可以使用空白运算符检查值是否为空字符串</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">{% unless settings.message == blank %}</span>
<span class="line">{{ settings.message }}</span>
<span class="line">{% endunless %}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>总之，需要一定的逻辑代码来检查值是否为空。</p><ol start="3"><li><code>Using dynamic sources for settings</code>:使用动态源进行设置</li></ol><p>对于 JSON 模板中包含的版块和块的设置，可以选择将一个或多个动态源连接到该设置 ，具体取决于设置类型。</p>`,30)),e("p",null,[s[3]||(s[3]=n("参考链接")),e("a",g,[s[2]||(s[2]=n("dynamic-sources")),l(i)])]),s[6]||(s[6]=t('<h3 id="conditional-settings-条件设置" tabindex="-1"><a class="header-anchor" href="#conditional-settings-条件设置"><span>Conditional settings 条件设置</span></a></h3><p>并非所有设置都可以有条件地设置。以下设置支持条件设置：</p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">支持条件设置</p><ul><li>All basic input settings // 所有基本输入设置</li><li>All sidebar settings // 所有边栏设置</li><li>These specialized input settings: //专用输入设置 <ul><li>color</li><li>color_background</li><li>color_scheme</li><li>font_picker</li><li>html</li><li>image_picker</li><li>inline_richtext</li><li>link_list</li><li>liquid</li><li>richtext</li><li>text_alignment</li><li>url</li><li>video</li><li>video_url</li></ul></li></ul></div><h3 id="仅做了解的部分" tabindex="-1"><a class="header-anchor" href="#仅做了解的部分"><span>仅做了解的部分</span></a></h3><ol><li>Platform-controlled settings 平台控制的设置</li></ol><p>在 theme editor 中，Shopify 在模板和版块级别公开自定义 CSS 设置 。无法在设置架构中添加或隐藏此设置。</p><p>商家使用此设置添加的任何自定义 CSS 都存储在 custom_css 属性中，可以是 JSON 模板的 section 属性 ，也可以存储在 settings_data.jsonplatform_customizations 对象中。</p><ol start="2"><li>Translate settings 翻译设置</li></ol><p>根据在线商店的活动语言翻译设置架构的各种属性 。这些翻译存储在 schema locale files 中</p>',9))])}const v=a(d,[["render",u]]),b=JSON.parse('{"path":"/docs/shopify/Settings.html","title":"Settings 的一些配置","lang":"en-US","frontmatter":{"title":"Settings 的一些配置","date":"2025-08-05T00:00:00.000Z","tags":["shopify"],"categories":["shopify"]},"headers":[{"level":2,"title":"概述部分","slug":"概述部分","link":"#概述部分","children":[{"level":3,"title":"Settings 分类","slug":"settings-分类","link":"#settings-分类","children":[]},{"level":3,"title":"Setting 一般所在的位置","slug":"setting-一般所在的位置","link":"#setting-一般所在的位置","children":[]},{"level":3,"title":"Setting 按照级别分类","slug":"setting-按照级别分类","link":"#setting-按照级别分类","children":[]},{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Conditional settings 条件设置","slug":"conditional-settings-条件设置","link":"#conditional-settings-条件设置","children":[]},{"level":3,"title":"仅做了解的部分","slug":"仅做了解的部分","link":"#仅做了解的部分","children":[]}]}],"git":{"createdTime":1754386143000,"updatedTime":1754386143000,"contributors":[{"name":"AnteRay666","email":"3458403927@qq.com","commits":1}]},"filePathRelative":"docs/shopify/Settings.md"}');export{v as comp,b as data};
