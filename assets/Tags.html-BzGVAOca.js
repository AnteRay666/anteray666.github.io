import{_ as a,c as s,b as n,o as i}from"./app-D-LXcV_B.js";const l={};function d(r,e){return i(),s("div",null,e[0]||(e[0]=[n(`<h1 id="tags" tabindex="-1"><a class="header-anchor" href="#tags"><span>Tags</span></a></h1><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h2><p><code>comment</code>  标记让你能够在 Liquid 模板中书写的内容不被输出。任何书写在  <code>comment</code>  起始与结束标记之间的内容都不会被输出，如果是 Liquid 代码则不会被执行。</p><p>这没什么好说的，类似 C 语言的<code>//</code>,类似 Python 的 <code>#</code>。</p><h2 id="控制流" tabindex="-1"><a class="header-anchor" href="#控制流"><span>控制流</span></a></h2><ol><li><code>if</code> 略</li><li><code>unless</code> 除非，与 <code>if</code> 相对，同<code>{{if a != ?}}</code>.</li><li><code>elsif</code>(<code>else if</code> 缩写，仅注意不要书写错误即可)</li><li><code>else</code> 略</li><li><code>case/when</code> 类似于 <code>switch</code>.</li></ol><h2 id="迭代-循环" tabindex="-1"><a class="header-anchor" href="#迭代-循环"><span>迭代／循环</span></a></h2><ol><li><code>for</code> 略</li><li><code>break</code> 略</li><li><code>continue</code> 略</li></ol><h2 id="for-parameters" tabindex="-1"><a class="header-anchor" href="#for-parameters"><span>for (parameters)</span></a></h2><ol><li>使用 <code>limit</code> 限定循环执行的次数。</li></ol><div class="language-input line-numbers-mode" data-highlighter="prismjs" data-ext="input" data-title="input"><pre><code><span class="line">&lt;!-- if array = [1,2,3,4,5,6] --&gt;</span>
<span class="line">{% for item in array limit:2 %}</span>
<span class="line">  {{ item }}</span>
<span class="line">{% endfor %}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-output line-numbers-mode" data-highlighter="prismjs" data-ext="output" data-title="output"><pre><code><span class="line">1 2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>使用 <code>offset</code>从指定索引号开始执行循环。</li></ol><div class="language-input line-numbers-mode" data-highlighter="prismjs" data-ext="input" data-title="input"><pre><code><span class="line">&lt;!-- if array = [1,2,3,4,5,6] --&gt;</span>
<span class="line">{% for item in array offset:2 %}</span>
<span class="line">  {{ item }}</span>
<span class="line">{% endfor %}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-output line-numbers-mode" data-highlighter="prismjs" data-ext="output" data-title="output"><pre><code><span class="line">3 4 5 6</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>使用<code>range</code>定义循环执行的范围。可利用数字或变量来定义此执行范围。</li></ol><div class="language-input line-numbers-mode" data-highlighter="prismjs" data-ext="input" data-title="input"><pre><code><span class="line">{% for i in (3..5) %}</span>
<span class="line">  {{ i }}</span>
<span class="line">{% endfor %}</span>
<span class="line"></span>
<span class="line">{% assign num = 4 %}</span>
<span class="line">{% for i in (1..num) %}</span>
<span class="line">  {{ i }}</span>
<span class="line">{% endfor %}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-output line-numbers-mode" data-highlighter="prismjs" data-ext="output" data-title="output"><pre><code><span class="line">3 4 5</span>
<span class="line">1 2 3 4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>使用<code>reversed</code>反转循环的执行顺序。注意和  <code>reverse</code>  过滤器（filter）的拼写是不同的。</li></ol><div class="language-input line-numbers-mode" data-highlighter="prismjs" data-ext="input" data-title="input"><pre><code><span class="line">&lt;!-- if array = [1,2,3,4,5,6] --&gt;</span>
<span class="line">{% for item in array reversed %}</span>
<span class="line">  {{ item }}</span>
<span class="line">{% endfor %}</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-output line-numbers-mode" data-highlighter="prismjs" data-ext="output" data-title="output"><pre><code><span class="line">6 5 4 3 2 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="cycle" tabindex="-1"><a class="header-anchor" href="#cycle"><span>cycle</span></a></h2><p>循环一组字符串并按照它们传入的顺序将其输出。</p><h2 id="cycle-parameters" tabindex="-1"><a class="header-anchor" href="#cycle-parameters"><span>cycle (parameters)</span></a></h2><p><code>cycle</code>  能够接受一个叫做  <code>cycle group</code>  的参数，以便满足你在模版中需要使用多个  <code>cycle</code>  代码块的情况。如果没有为 cycle group 命名，那么将会假定带有相同参数的 cycle 调用属于同一个组（group）。</p><h2 id="tablerow" tabindex="-1"><a class="header-anchor" href="#tablerow"><span>tablerow</span></a></h2><p>生成一个 HTML 表格。必须用  <code>&lt;table&gt;</code>  和  <code>&lt;/table&gt;</code>  这两个 HTML 标签将其包裹起来。</p><h2 id="tablerow-parameters" tabindex="-1"><a class="header-anchor" href="#tablerow-parameters"><span>tablerow (parameters)</span></a></h2><p><code>cols</code> 定义表格应当有多少列。 <code>limit</code> 在执行到指定的脚标（index）之后退出 tablerow 。 <code>offset</code> 在指定的脚标（index）之后开始执行 tablerow 。 <code>range</code> 定义循环执行的范围。可利用数字和变量来定义执行范围。</p><h2 id="原始内容" tabindex="-1"><a class="header-anchor" href="#原始内容"><span>原始内容</span></a></h2><p><code>raw</code>  标记临时禁止处理其所包围的代码。如果输出的内容与 Liquid 模板语言有冲突时（例如 Mustache、Handlebars 模板语言）可以避免冲突。</p><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h2><p><code>increment</code>创建一个全新的数值变量，并且在后续每次调用时将此变量的值加 1。初始值是 0。</p><p><code>decrement</code>创建一个全新的数值变量，并且在后续每次调用时将此变量的值减 1。初始值是 -1。</p><p>注意：通过  <code>increment</code>  和<code>decrement</code>标记（tag）创建的变量与通过  <code>assign</code>  或  <code>capture</code>  创建的变量是相互独立的。</p><p>下一部分<a href="./Filters">Filters</a></p>`,36)]))}const t=a(l,[["render",d]]),o=JSON.parse('{"path":"/docs/shopify/Tags.html","title":"Tags","lang":"en-US","frontmatter":{"title":"Tags","date":"2025-08-05T00:00:00.000Z","tags":["liquid"],"categories":["shopify"]},"headers":[{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":2,"title":"控制流","slug":"控制流","link":"#控制流","children":[]},{"level":2,"title":"迭代／循环","slug":"迭代-循环","link":"#迭代-循环","children":[]},{"level":2,"title":"for (parameters)","slug":"for-parameters","link":"#for-parameters","children":[]},{"level":2,"title":"cycle","slug":"cycle","link":"#cycle","children":[]},{"level":2,"title":"cycle (parameters)","slug":"cycle-parameters","link":"#cycle-parameters","children":[]},{"level":2,"title":"tablerow","slug":"tablerow","link":"#tablerow","children":[]},{"level":2,"title":"tablerow (parameters)","slug":"tablerow-parameters","link":"#tablerow-parameters","children":[]},{"level":2,"title":"原始内容","slug":"原始内容","link":"#原始内容","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[]}],"git":{"createdTime":1754271655000,"updatedTime":1754386143000,"contributors":[{"name":"AnteRay666","email":"3458403927@qq.com","commits":2}]},"filePathRelative":"docs/shopify/Tags.md"}');export{t as comp,o as data};
