import{_ as n,c as e,b as a,o as p}from"./app-D-LXcV_B.js";const l={};function t(o,s){return p(),e("div",null,s[0]||(s[0]=[a(`<h1 id="vscode-启动器" tabindex="-1"><a class="header-anchor" href="#vscode-启动器"><span>Vscode 启动器</span></a></h1><p>这是一个基于 Electron+Vue3+vite 实现的项目</p><p>在这里我们将分享我们的设计思路以及核心编程代码。</p><h2 id="第一步" tabindex="-1"><a class="header-anchor" href="#第一步"><span>第一步</span></a></h2><p>先确定好核心功能，即通过 Vscode 打开项目。</p><p>确定 Electron 能够通过原生 API 访问操作系统，读取配置文件，调用系统进程，进而打开项目文件夹。</p><p>确定 Vue3 能够实现界面布局，并跟 Electron 联系在一起，</p><p>确定 Vite 能够快速构建并且打包发布。</p><h2 id="第二步" tabindex="-1"><a class="header-anchor" href="#第二步"><span>第二步</span></a></h2><p>开发。</p><p>我个人习惯使用分文件形式，这样方便维护.</p><p>比如 electron 文件夹</p><div class="language-perl line-numbers-mode" data-highlighter="prismjs" data-ext="perl" data-title="perl"><pre><code><span class="line">electron<span class="token operator">/</span></span>
<span class="line">├── main<span class="token operator">/</span></span>
<span class="line">│   ├── index<span class="token operator">.</span>ts           <span class="token comment"># 主进程入口</span></span>
<span class="line">│   ├── window<span class="token operator">.</span>ts          <span class="token comment"># 窗口管理</span></span>
<span class="line">├── preload<span class="token operator">/</span></span>
<span class="line">│   └── index<span class="token operator">.</span>ts           <span class="token comment"># 渲染进程 bridge</span></span>
<span class="line">├── ipc<span class="token operator">/</span></span>
<span class="line">│   ├── file<span class="token operator">.</span>ts            <span class="token comment"># 与文件选择相关的 ipc 处理</span></span>
<span class="line">│   └── vscode<span class="token operator">.</span>ts          <span class="token comment"># 与 VS Code 打开相关的 ipc 处理</span></span>
<span class="line">├── config<span class="token operator">/</span></span>
<span class="line">│   └── paths<span class="token operator">.</span>ts           <span class="token comment"># 所有路径、配置项等统一管理</span></span>
<span class="line">├── electron<span class="token operator">-</span>env<span class="token operator">.</span>d<span class="token operator">.</span>ts</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端通过 Vue3 实现</p><p>左侧一个侧边栏，右侧是主界面</p>`,15)]))}const i=n(l,[["render",t]]),r=JSON.parse('{"path":"/docs/Electron/Vscodeopener.html","title":"Vscode 启动器","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"第一步","slug":"第一步","link":"#第一步","children":[]},{"level":2,"title":"第二步","slug":"第二步","link":"#第二步","children":[]}],"git":{"createdTime":1754386143000,"updatedTime":1754386143000,"contributors":[{"name":"AnteRay666","email":"3458403927@qq.com","commits":1}]},"filePathRelative":"docs/Electron/Vscodeopener.md"}');export{i as comp,r as data};
