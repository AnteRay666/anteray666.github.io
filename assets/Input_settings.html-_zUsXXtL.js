import{_ as d,c as l,a as e,b as n,d as s,e as o,r as c,o as i}from"./app-CZz97U81.js";const p={},r={id:"input-settings",tabindex:"-1"},u={class:"header-anchor",href:"#input-settings"},h={href:"https://shopify.dev/docs/storefronts/themes/architecture/settings/input-settings",target:"_blank",rel:"noopener noreferrer"},k={href:"https://shopify.dev/docs/storefronts/themes/architecture/settings/input-settings#liquid",target:"_blank",rel:"noopener noreferrer"};function m(b,t){const a=c("ExternalLinkIcon");return i(),l("div",null,[e("h1",r,[e("a",u,[e("span",null,[e("a",h,[t[0]||(t[0]=s("Input settings")),o(a)])])])]),t[9]||(t[9]=n(`<p>输入设置,可以保存一个值，并可由商家配置。</p><p>输入设置一般由<a href="#standard-attributes">标准属性</a>组成，分为两类：</p><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类"><span>分类</span></a></h2><ol><li><p><a href="#basic-input-settings-%E5%9F%BA%E6%9C%AC%E8%BE%93%E5%85%A5%E8%AE%BE%E7%BD%AE">Basic input settings</a> 基本输入设置</p></li><li><p><a href="#specialized-input-settings-%E4%B8%93%E9%97%A8%E7%9A%84%E8%BE%93%E5%85%A5%E8%AE%BE%E7%BD%AE">Specialized input settings</a> 专门的输入设置</p></li></ol><h2 id="standard-attributes" tabindex="-1"><a class="header-anchor" href="#standard-attributes"><span>standard attributes</span></a></h2><p>输入设置（Input Settings）都包含一组“标准属性”，这些属性适用于所有可配置的设置类型（如 checkbox、text、select、color 等）</p><p>✅ 属性详解与功能</p><table><thead><tr><th>属性</th><th>类型</th><th>必选</th><th>功能简介</th></tr></thead><tbody><tr><td><code>type</code></td><td>string</td><td>是</td><td>声明设置类型，例如 <code>checkbox</code>, <code>text</code>, <code>color</code> 等</td></tr><tr><td><code>id</code></td><td>string</td><td>是</td><td>唯一标识符，用于在 Liquid 中通过 <code>settings.id</code> 访问</td></tr><tr><td><code>label</code></td><td>string</td><td>是</td><td>编辑器侧边显示的说明标签</td></tr><tr><td><code>default</code></td><td>varies</td><td>否</td><td>初始值，比如 <code>&quot;Enter text&quot;</code>、<code>true</code>、<code>#ffffff</code></td></tr><tr><td><code>info</code></td><td>string</td><td>否</td><td>补充说明或帮助信息，如链接或额外提示</td></tr></tbody></table><p>示例：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> <span class="token comment">// type 表示颜色选择器</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;heading_color&quot;</span><span class="token punctuation">,</span> <span class="token comment">// id 用于后续 Liquid 调用：{{ section.settings.heading_color }}</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Heading color&quot;</span><span class="token punctuation">,</span> <span class="token comment">// label 在编辑器界面中显示</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#333333&quot;</span><span class="token punctuation">,</span> <span class="token comment">// default 是默认选定的十六进制颜色</span></span>
<span class="line">  <span class="token property">&quot;info&quot;</span><span class="token operator">:</span> <span class="token string">&quot;This color will apply to your section heading.&quot;</span> <span class="token comment">// info 提供用户额外理解的提示</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Note</p><ol><li>默认值行为：如果未提供 <code>default</code> 属性，<code>checkbox</code> 类型默认为 <code>false</code>，其他类型则为 <code>nil</code> 或<code>空值</code>.</li><li>info 属性的使用：可以在字符串中内嵌链接，格式为 <a href="URL">链接文本</a>，编辑器会将其渲染为可点击的链接。</li></ol></div><h2 id="basic-input-settings-基本输入设置" tabindex="-1"><a class="header-anchor" href="#basic-input-settings-基本输入设置"><span>Basic input settings 基本输入设置</span></a></h2><h3 id="_1-checkbox" tabindex="-1"><a class="header-anchor" href="#_1-checkbox"><span>1. <code>checkbox</code></span></a></h3><p><code>checkbox</code>类型的设置将输出复选框字段。此设置类型可用于打开和关闭功能，例如是否显示公告栏。 以下是实例代码</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;checkbox&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;show_announcement&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Show announcement&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 如果未指定 default，则默认值为 false。</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在访问复选框类型设置的值时，数据将作为布尔值返回。</p><h3 id="_2-number" tabindex="-1"><a class="header-anchor" href="#_2-number"><span>2. <code>number</code></span></a></h3><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Note</p><p>它除了标准属性外，还有一个 Attribute 值<code>placeholder</code>,表示输入的占位符值。和<code>text</code>一样具有该属性。</p></div><p>实例代码</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;products_per_page&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Products per page&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token number">20</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问数字类型设置的值时，数据将以以下格式之一返回：</p><ul><li>number. 一个数字 。</li><li>nil, 如果没有输入任何内容。</li></ul><div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p><code>default</code>属性是可选的。但是，该值必须是数字而不是字符串。否则会导致错误。</p></div><h3 id="_3-radio" tabindex="-1"><a class="header-anchor" href="#_3-radio"><span>3. <code>radio</code></span></a></h3><p><code>radio</code> 类型的设置输出 <code>radio option</code> 字段.除了输入设置的标准属性外， <code>radio</code>还具有一个必需的<code>options</code>属性，该属性接受<code>value</code>和<code>label</code>定义数组。</p><p>类比枚举类型，这里的 options 就是枚举的类型，区别于 checkbox 只有 2 个值(ture and false)。这里的值支持自定义，但要注意传输的值要合法，否则会导致报错。</p><p>例如：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;radio&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;logo_aligment&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Logo alignment&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;options&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Left&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;centered&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Centered&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;left&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问<code>radio</code>设置类型的值时，数据将作为字符串返回。</p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Note</p><p>如果未指定 default，则默认选择第一个选项。</p></div><h3 id="_4-range" tabindex="-1"><a class="header-anchor" href="#_4-range"><span>4. <code>range</code></span></a></h3><p><code>range</code>类型的设置将输出带有输入字段的范围滑块字段。除了标准属性外， <code>range</code>类型设置还具有以下属性：</p><table><thead><tr><th>Attribute</th><th>Description</th><th>Required</th></tr></thead><tbody><tr><td><code>min</code></td><td>输入的最小值</td><td>Yes</td></tr><tr><td><code>max</code></td><td>输入的最大值</td><td>Yes</td></tr><tr><td><code>step</code></td><td>滑块步长之间的增量大小,省略时默认为 1</td><td>No</td></tr><tr><td><code>unit</code></td><td>输入的单位。</td><td>No</td></tr></tbody></table><ul><li>可以用来捕获不同的数值。</li><li>可以使用提供的滑块或在输入字段中键入值来更新范围值： <ul><li>如果输入的值不符合<code>step</code>定义，则该值将舍入到最接近的步骤。</li><li>如果输入的值超出给定的<code>min</code>和<code>max</code>，则该值将相应地恢复为最小值或最大值。</li></ul></li></ul><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;range&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;font_size&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;min&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;max&quot;</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;step&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;unit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Font size&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token number">16</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问<code>range</code>类型设置的值时，数据将以数字形式返回。</p><div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p><code>default</code>属性是必需的。<code>min</code>、<code>max</code>、<code>step</code> 和 <code>default</code> 属性不能是字符串值。否则会导致错误。</p></div><h3 id="_5-select" tabindex="-1"><a class="header-anchor" href="#_5-select"><span>5. <code>select</code></span></a></h3><p><code>select </code>类型的设置会根据某些条件输出不同的<code>Selector fields</code>。除了标准属性外， 选择类型设置还具有以下属性：</p><table><thead><tr><th>Attribute</th><th>Description</th><th>Required</th></tr></thead><tbody><tr><td>options</td><td>为下拉列表中的每个选项获取<code>value</code> / <code>label</code> 定义数组。</td><td>Yes</td></tr><tr><td>group</td><td>可以添加到每个选项的可选属性，以便在下拉列表中创建选项组</td><td>No</td></tr></tbody></table><p>Shopify 支持两种不同的 select UI 表现形式： 对于<code>Selector fields</code> 选择器字段</p><p>以下条件将选择器字段呈现为 <code>DropDown</code>(默认) 或 <code>SegmentedControl</code>：</p><ul><li><code>DropDown</code>使用可选的<code>group</code>属性。提供了五个以上的选项。如果选项太长，可能会溢出其容器。</li><li><code>SegmentedControl</code>不使用可选的<code>group</code>属性。只提供两到五个选项。所有选项都适合其容器内，并且不会溢出。</li></ul><p>可以使用此设置类型来捕获多选项选择.</p><p>官网上对于<code>Selector fields</code>的选择是自动的，但是实际上对于选择<code>SegmentedControl</code>的可以添加字段 <code>&quot;style&quot;: &quot;segmented&quot;</code></p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">Note</p><p>如果未指定 default，则默认选择第一个选项。</p></div><h3 id="_6-text" tabindex="-1"><a class="header-anchor" href="#_6-text"><span>6. <code>text</code></span></a></h3><p><code>text</code>类型的设置输出单行文本字段。除了标准属性外， 文本类型设置还具有属性：<code>placeholder</code>,表示输入的占位符值。</p><p>可以使用此设置类型捕获短字符串. 例如：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;footer_linklist_title&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Heading&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Quick links&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问文本类型设置的值时，数据将以以下格式之一返回：</p><ul><li>string, 字符串</li><li>empty object, 如果未输入任何内容。</li></ul><h3 id="_7-textarea" tabindex="-1"><a class="header-anchor" href="#_7-textarea"><span>7. <code>textarea</code></span></a></h3><p><code>textarea</code> 类型的设置将输出多行文本字段。除了标准属性外， 文本区域类型设置还具有属性：<code>placeholder</code>,表示输入的占位符值.</p><p>使用此设置类型捕获较大的文本块.例如:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;textarea&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;home_welcome_message&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Welcome message&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Welcome to my shop!&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问文本区域类型设置的值时，数据将以以下格式之一返回：(与前面的<code>text</code>类型一样)</p><ul><li>string, 字符串</li><li>empty object, 如果未输入任何内容。</li></ul><h2 id="specialized-input-settings-专门的输入设置" tabindex="-1"><a class="header-anchor" href="#specialized-input-settings-专门的输入设置"><span>Specialized input settings 专门的输入设置</span></a></h2><p>由于专门的输入设置比较多(24 个)，只简单标注一下重点。</p><table><thead><tr><th>All settings</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>1</td><td><code>article </code></td><td><code>color_scheme </code></td><td><code>link_list </code></td><td><code>product_list </code></td></tr><tr><td>2</td><td><code>blog </code></td><td><code>color_scheme_group</code></td><td><code>liquid </code></td><td><code>richtext </code></td></tr><tr><td>3</td><td><code>collection </code></td><td><code>font_picker </code></td><td><code>metaobject </code></td><td><code>text_alignment </code></td></tr><tr><td>4</td><td><code>collection_list </code></td><td><code>html </code></td><td><code>metaobject_list </code></td><td><code>url </code></td></tr><tr><td>5</td><td><code>color </code></td><td><code>image_picker </code></td><td><code>page </code></td><td><code>video </code></td></tr><tr><td>6</td><td><code>color_background</code></td><td><code>inline_richtext </code></td><td><code>product </code></td><td><code>video_url </code></td></tr></tbody></table><h3 id="🟦-一类-9-个-资源选择类-用于-shopify-后台已有内容" tabindex="-1"><a class="header-anchor" href="#🟦-一类-9-个-资源选择类-用于-shopify-后台已有内容"><span>🟦 一类(9 个)：资源选择类（用于 Shopify 后台已有内容）</span></a></h3><table><thead><tr><th>类型</th><th>用途</th><th>示例返回值</th></tr></thead><tbody><tr><td><code>article</code></td><td>选择一篇博客文章</td><td>Article 对象</td></tr><tr><td><code>blog</code></td><td>选择一个博客频道</td><td>Blog 对象</td></tr><tr><td><code>collection</code></td><td>单个集合</td><td>Collection 对象</td></tr><tr><td><code>collection_list</code></td><td>多个集合</td><td>Collection[]</td></tr><tr><td><code>product</code></td><td>单个产品</td><td>Product 对象</td></tr><tr><td><code>product_list</code></td><td>多个产品</td><td>Product[]</td></tr><tr><td><code>page</code></td><td>选择一个自定义页面</td><td>Page 对象</td></tr><tr><td><code>metaobject</code></td><td>用于绑定单一内容项，如某个团队成员或一条 FAQ</td><td>metaobject 对象</td></tr><tr><td><code>metaobject_list</code></td><td>用于绑定多个内容项，如 FAQ 列表、活动日程列表等</td><td>metaobject []</td></tr></tbody></table><h3 id="🎨-二类-6-个-设计配置类-控制样式、颜色、字体" tabindex="-1"><a class="header-anchor" href="#🎨-二类-6-个-设计配置类-控制样式、颜色、字体"><span>🎨 二类(6 个)：设计配置类（控制样式、颜色、字体）</span></a></h3><table><thead><tr><th>类型</th><th>用途</th></tr></thead><tbody><tr><td><code>color</code> / <code>color_background</code></td><td>十六进制颜色、渐变色</td></tr><tr><td><code>color_scheme</code></td><td>Shopify 预设的颜色方案（配合 theme settings 定义）</td></tr><tr><td><code>color_scheme_group</code></td><td>多种颜色方案组合选择器</td></tr><tr><td><code>font_picker</code></td><td>字体选择器(自动填充 Shopify 字体库中的字体)</td></tr><tr><td><code>text_alignment</code></td><td>文本对齐（left/center/right）</td></tr></tbody></table><ol><li>在<code>color_scheme_group</code> 中,提到了<code>role</code>.</li></ol><p><code>role </code>字段输出配色方案预览。配色方案预览对商家在编辑器中可能选择配色方案的任何位置都可见。您可以将角色分配给配色方案定义，以将配色方案映射到预览。</p><ol start="2"><li><p>对于<code>font_picker</code> ,<code>default</code>属性是必需的。如果不包含它，将导致错误.</p></li><li><p>对于<code>text_alignment</code>，存在一个<code>default</code>,只有 3 个值可以选择，未选择的时候，默认为<code>left</code>.</p></li></ol><h3 id="🔧-三类-4-个-内容输入类-富文本、自定义代码" tabindex="-1"><a class="header-anchor" href="#🔧-三类-4-个-内容输入类-富文本、自定义代码"><span>🔧 三类(4 个)：内容输入类（富文本、自定义代码）</span></a></h3><table><thead><tr><th>类型</th><th>用途</th></tr></thead><tbody><tr><td><code>html</code></td><td>纯 HTML 代码输入</td></tr><tr><td><code>richtext</code></td><td>富文本输入（含 HTML）</td></tr><tr><td><code>inline_richtext</code></td><td>单行富文本（用于按钮等）</td></tr><tr><td><code>liquid</code></td><td>可输入 Liquid 代码片段（⚠️ 高级用法）</td></tr></tbody></table>`,70)),e("ol",null,[t[8]||(t[8]=n("<li><p><code>html</code>除了标准属性外， <code>html</code>类型设置还具有属性：<code>placeholder</code>,表示输入的占位符值.</p><p>以下 HTML 标签将被自动删除：<code>&lt;html&gt;</code>,<code>&lt;head&gt;</code>,<code>&lt;body&gt;</code></p></li><li><p><code>inline_richtext</code> 输出未包装在段落标记 （<code>&lt;p&gt;</code>） 中的 HTML 标记。该设置包括以下基本格式选项： <code>Bold(粗体)</code>, <code>Italic(斜体)</code>,<code>Link(链接)</code>.</p><p><code>inline_richtext</code>不支持以下功能：</p><ul><li>Line breaks (<code>&lt;br /&gt;</code>)</li><li>富文本编辑器中的下划线选项</li></ul></li>",2)),e("li",null,[t[6]||(t[6]=e("p",null,[e("code",null,"liquid"),s("中"),e("code",null,"default"),s("是可选的。但是，如果使用它，则其值不能是空字符串.")],-1)),e("p",null,[t[2]||(t[2]=s("并且")),t[3]||(t[3]=e("code",null,"liquid",-1)),t[4]||(t[4]=s("类型有一定的局限性，它无法访问一些 liquid 对象/标签，只可以访问一些特定的内容，具体参考")),e("a",k,[t[1]||(t[1]=s("这里")),o(a)]),t[5]||(t[5]=s("."))]),t[7]||(t[7]=e("p",null,"同时，在这些设置中输入的内容不能超过 50kb。保存超过此限制或包含无效 Liquid 的内容将导致错误。",-1))])]),t[10]||(t[10]=n('<h3 id="🔗-四类-5-个-链接与媒体类" tabindex="-1"><a class="header-anchor" href="#🔗-四类-5-个-链接与媒体类"><span>🔗 四类(5 个)：链接与媒体类</span></a></h3><table><thead><tr><th>类型</th><th>用途</th></tr></thead><tbody><tr><td><code>url</code></td><td>普通链接输入</td></tr><tr><td><code>link_list</code></td><td>绑定到 Shopify 菜单（自动填充商店的可用菜单）</td></tr><tr><td><code>video</code></td><td>Shopify 的 <code>media</code> 视频资源</td></tr><tr><td><code>video_url</code></td><td>YouTube/Vimeo 视频链接</td></tr><tr><td><code>image_picker</code></td><td>选择图片(自动填充 Shopify 后台文件部分的可用图片，并可以选择上传新图片)</td></tr></tbody></table><ol><li><p>在<code>image_picker</code>中,提到了<code>Image focal points</code>. 使用 image_picker 设置选择的图像支持焦点。焦点是图片中商家希望在图片被主题裁剪和调整时保持在视野中的位置。可以在主题编辑器 image_picker 设置中设置焦点，也可以从 “文件” 页面设置焦点。</p></li><li><p><code>link_list</code>中<code>default</code>可接受值是 <code>main-menu</code> 和 <code>footer</code>。</p></li></ol><h3 id="特殊说明" tabindex="-1"><a class="header-anchor" href="#特殊说明"><span>特殊说明</span></a></h3><ol><li><code>limit</code>属性，商家可以选择的最大集合数。默认限制和您可以设置的最大限制为 50。在专门的输入设置中有三个类型具有这个属性，如下所示：</li></ol><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>collection_list</code></td><td>使用<code>limit</code>字段 限制集合数量</td></tr><tr><td><code>metaobject_list</code></td><td>使用<code>limit</code>字段 限制数量</td></tr><tr><td><code>product_list</code></td><td>使用<code>limit</code>字段 限制商品数量</td></tr></tbody></table><ol start="2"><li>切换 <code>preset</code> 时不会更新设置 的类型</li></ol><table><thead><tr><th>类型</th><th>原因说明</th></tr></thead><tbody><tr><td><code>collection_list</code></td><td>用户选择资源，不易自动覆盖</td></tr><tr><td><code>metaobject_list</code></td><td>同上</td></tr><tr><td><code>product_list</code></td><td>同上</td></tr><tr><td><code>metaobject</code></td><td>与上面一样，绑定特定 metaobject 是精细操作</td></tr><tr><td><code>image_picker</code></td><td>通常不会被预设覆盖，用户可能上传了图片</td></tr><tr><td><code>video</code></td><td>同上</td></tr><tr><td><code>video_url</code></td><td>一般也不会被覆盖（尤其是上传视频的场景）</td></tr></tbody></table><ol start="3"><li>不支持 <code>default</code> 属性的类型</li></ol><table><thead><tr><th>类型</th><th>不支持 <code>default</code> 的原因</th></tr></thead><tbody><tr><td><code>collection_list</code></td><td>多个集合绑定，默认值不适用</td></tr><tr><td><code>metaobject_list</code></td><td>同上</td></tr><tr><td><code>product_list</code></td><td>同上</td></tr><tr><td><code>metaobject</code></td><td>单个资源绑定，不支持默认</td></tr><tr><td><code>image_picker</code></td><td>无默认图片</td></tr><tr><td><code>video</code></td><td>无默认视频（上传型）</td></tr></tbody></table><ol start="4"><li>会输出资源选取器字段并自动填充内容的类型</li></ol><table><thead><tr><th>类型</th><th>自动填充商店资源</th><th>表现形式</th><th>支持单选/多选</th></tr></thead><tbody><tr><td><code>product</code></td><td>✅ 商品选择器</td><td>单个商品选择</td><td>单选</td></tr><tr><td><code>product_list</code></td><td>✅ 商品选择器</td><td>多个商品选择</td><td>多选</td></tr><tr><td><code>collection</code></td><td>✅ 集合选择器</td><td>单个集合选择</td><td>单选</td></tr><tr><td><code>collection_list</code></td><td>✅ 集合选择器</td><td>多个集合选择</td><td>多选</td></tr><tr><td><code>blog</code></td><td>✅ 博客选择器</td><td>单个博客选择</td><td>单选</td></tr><tr><td><code>article</code></td><td>✅ 文章选择器</td><td>单个文章选择</td><td>单选</td></tr><tr><td><code>page</code></td><td>✅ 页面选择器</td><td>单个页面选择</td><td>单选</td></tr><tr><td><code>metaobject</code></td><td>✅ metaobject 选择器</td><td>单个 metaobject</td><td>单选</td></tr><tr><td><code>metaobject_list</code></td><td>✅ metaobject 选择器</td><td>多个 metaobject</td><td>多选</td></tr><tr><td><code>link_list</code></td><td>✅ 菜单选择器</td><td>从导航菜单中选择</td><td>单选</td></tr></tbody></table><h3 id="create-link" tabindex="-1"><a class="header-anchor" href="#create-link"><span>Create Link</span></a></h3><p>跟 Markdown 语法，一样，添加一个<code>[text]({url})</code>来插入链接。点击跳转。</p>',14))])}const v=d(p,[["render",m]]),q=JSON.parse('{"path":"/docs/shopify/Input_settings.html","title":"Input settings","lang":"en-US","frontmatter":{"title":"Input settings","date":"2025-08-05T00:00:00.000Z","tags":["shopify"],"categories":["shopify"]},"headers":[{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[]},{"level":2,"title":"standard attributes","slug":"standard-attributes","link":"#standard-attributes","children":[]},{"level":2,"title":"Basic input settings 基本输入设置","slug":"basic-input-settings-基本输入设置","link":"#basic-input-settings-基本输入设置","children":[{"level":3,"title":"1. checkbox","slug":"_1-checkbox","link":"#_1-checkbox","children":[]},{"level":3,"title":"2. number","slug":"_2-number","link":"#_2-number","children":[]},{"level":3,"title":"3. radio","slug":"_3-radio","link":"#_3-radio","children":[]},{"level":3,"title":"4. range","slug":"_4-range","link":"#_4-range","children":[]},{"level":3,"title":"5. select","slug":"_5-select","link":"#_5-select","children":[]},{"level":3,"title":"6. text","slug":"_6-text","link":"#_6-text","children":[]},{"level":3,"title":"7. textarea","slug":"_7-textarea","link":"#_7-textarea","children":[]}]},{"level":2,"title":"Specialized input settings 专门的输入设置","slug":"specialized-input-settings-专门的输入设置","link":"#specialized-input-settings-专门的输入设置","children":[{"level":3,"title":"🟦 一类(9 个)：资源选择类（用于 Shopify 后台已有内容）","slug":"🟦-一类-9-个-资源选择类-用于-shopify-后台已有内容","link":"#🟦-一类-9-个-资源选择类-用于-shopify-后台已有内容","children":[]},{"level":3,"title":"🎨 二类(6 个)：设计配置类（控制样式、颜色、字体）","slug":"🎨-二类-6-个-设计配置类-控制样式、颜色、字体","link":"#🎨-二类-6-个-设计配置类-控制样式、颜色、字体","children":[]},{"level":3,"title":"🔧 三类(4 个)：内容输入类（富文本、自定义代码）","slug":"🔧-三类-4-个-内容输入类-富文本、自定义代码","link":"#🔧-三类-4-个-内容输入类-富文本、自定义代码","children":[]},{"level":3,"title":"🔗 四类(5 个)：链接与媒体类","slug":"🔗-四类-5-个-链接与媒体类","link":"#🔗-四类-5-个-链接与媒体类","children":[]},{"level":3,"title":"特殊说明","slug":"特殊说明","link":"#特殊说明","children":[]},{"level":3,"title":"Create Link","slug":"create-link","link":"#create-link","children":[]}]}],"git":{"createdTime":1754386143000,"updatedTime":1754386143000,"contributors":[{"name":"AnteRay666","email":"3458403927@qq.com","commits":1}]},"filePathRelative":"docs/shopify/Input_settings.md"}');export{v as comp,q as data};
