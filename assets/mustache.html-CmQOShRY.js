import{_ as a,c as n,b as e,o as t}from"./app-D4Ocjrzd.js";const l={};function i(p,s){return t(),n("div",null,s[0]||(s[0]=[e(`<h1 id="mustache-语法-即双大括号" tabindex="-1"><a class="header-anchor" href="#mustache-语法-即双大括号"><span>Mustache 语法(即双大括号)</span></a></h1><p>Mustache 是一个轻逻辑模板解析引擎，它的优势在于可以应用在 Javascript、PHP、Python、Perl 等多种编程语言中。</p><p>Mustache 的模板语法很简单，就那么几个：</p><ul><li><code>{{keyName}}</code></li><li><code>{{#keyName}} {{/keyName}}</code></li><li><code>{{^keyName}} {{/keyName}}</code></li><li><code>{{.}}</code></li><li><code>{{&lt;partials}}</code></li><li><code>{{{keyName}}}</code></li><li><code>{{!comments}}</code></li></ul><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法"><span><strong>基本语法</strong></span></a></h2><ol><li><strong>变量替换</strong></li></ol><p>使用双花括号 <code>{{}}</code> 包裹变量名来进行变量替换。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li><strong>条件渲染</strong></li></ol><p>使用 <code>{{#keyName}} </code>和<code>{{/keyName}}</code>来进行条件渲染。如果 <code>keyName</code> 的值为真，则渲染其中的内容。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">{{#isAdmin}}</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Welcome, Admin!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">{{/isAdmin}}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，这是一对组合，类似于<code>&lt;a&gt;&lt;/a&gt;</code>这样的。</p><ol start="3"><li><strong>反向条件渲染</strong></li></ol><p>使用 <code>{{^keyName}}</code> 和<code>{{/keyName}} </code>来进行反向条件渲染。如果 <code>keyName</code> 的值为假，则渲染其中的内容。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">{{^isAdmin}}</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Welcome, User!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">{{/isAdmin}}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>循环渲染</strong></li></ol><p>使用 <code>{{#items}}</code>和 <code>{{/items}}</code> 来循环渲染数组中的每一项。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  {{#items}}</span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>{{.}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  {{/items}}</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><strong>注释</strong></li></ol><p>使用<code> {{! 注释内容 }}</code> 来添加注释，注释内容不会被渲染。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">{{! This is a comment }}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="6"><li><strong>原样输出</strong></li></ol><p>使用三花括号 <code>{{{}}}</code> 来原样输出内容，不进行 HTML 转义。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{{htmlContent}}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="7"><li><strong>子模板</strong></li></ol><p>使用 <code>{{&gt; partialName}}</code> 来引入子模板。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Names<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">{{#names}} {{&gt; user}} {{/names}}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置分隔符" tabindex="-1"><a class="header-anchor" href="#设置分隔符"><span>设置分隔符</span></a></h2><p>可以通过设置分隔符来改变默认的花括号分隔符。</p><p><code>{{=&lt;% %&gt;=}}</code></p><p><code>&lt;% name %&gt;</code></p><p><code>&lt;%={{ }}=%&gt;</code></p>`,32)]))}const o=a(l,[["render",i]]),d=JSON.parse('{"path":"/blogs/programme/mustache.html","title":"Mustache 语法","lang":"en-US","frontmatter":{"title":"Mustache 语法","date":"2025-5-9","tags":["Mustache"],"categories":["programme"]},"headers":[{"level":2,"title":"基本语法","slug":"基本语法","link":"#基本语法","children":[]},{"level":2,"title":"设置分隔符","slug":"设置分隔符","link":"#设置分隔符","children":[]}],"git":{"createdTime":1746804568000,"updatedTime":1746804568000,"contributors":[{"name":"AnteRay666","email":"3458403927@qq.com","commits":1}]},"filePathRelative":"blogs/programme/mustache.md"}');export{o as comp,d as data};
