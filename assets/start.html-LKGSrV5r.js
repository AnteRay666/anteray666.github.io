import{_ as i,c as p,a,b as e,d as s,e as t,r as o,o as c}from"./app-T9QlsJtF.js";const r={},d={href:"https://github.com/github/gitignore/blob/main/Node.gitignore",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/electron-vite/electron-vite-vue",target:"_blank",rel:"noopener noreferrer"};function u(v,n){const l=o("ExternalLinkIcon");return c(),p("div",null,[n[6]||(n[6]=a(`<h1 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动！</span></a></h1><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> eletest <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> eletest</span>
<span class="line"><span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> electron --save-dev</span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> electron-builder --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),e("p",null,[n[1]||(n[1]=s(".gitignore 文件将保持和")),e("a",d,[n[0]||(n[0]=s("GitHub 的 Node.js gitignore 模板")),t(l)]),n[2]||(n[2]=s("一致"))]),n[7]||(n[7]=a(`<p>在 package.json 中添加以下脚本：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron .&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),e("p",null,[n[4]||(n[4]=s("呃呃呃，为了快速学习 Electron + Vite + Vue.我们找到一个开源的模版项目")),e("a",m,[n[3]||(n[3]=s("Electron + Vite + Vue")),t(l)]),n[5]||(n[5]=s("来进行快速构建并逐步分析。"))]),n[8]||(n[8]=a(`<p>因为我们没能在网络上找到一个合适的免费教程。</p><p>我们应会使用 DevToos，在应用程序中，它的快捷键是 Ctrl+Shifr+I</p><p>后面我们又找到了一个脚手架，Vite 可以快速构建项目</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> create electron-vite@latest my-app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会创建一个快速启动的项目，它包括 package.json 的配置。也就是你可以使用<code>npm run dev</code>启动你的 electron+vue 程序。</p><p>他会生成一个类似的目录</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">    my-app/  <span class="token comment"># 项目的根目录</span></span>
<span class="line">    ├── .vscode/  <span class="token comment"># Visual Studio Code 配置文件夹</span></span>
<span class="line">    ├── electron/  <span class="token comment"># Electron 相关文件夹，包含主进程和预加载脚本</span></span>
<span class="line">    │   ├── electron-env.d.ts  <span class="token comment"># Electron 环境类型声明文件</span></span>
<span class="line">    │   ├── main.ts  <span class="token comment"># Electron 主进程入口文件</span></span>
<span class="line">    │   └── preload.ts  <span class="token comment"># Electron 预加载脚本文件</span></span>
<span class="line">    ├── public/  <span class="token comment"># 公共文件夹，存放静态资源</span></span>
<span class="line">    ├── src/  <span class="token comment"># 源代码文件夹</span></span>
<span class="line">    │   ├── assets/  <span class="token comment"># 资源文件夹，存放图片、字体等资源</span></span>
<span class="line">    │   ├── components/  <span class="token comment"># 组件文件夹，存放 Vue 组件</span></span>
<span class="line">    │   ├── App.vue  <span class="token comment"># 根 Vue 组件</span></span>
<span class="line">    │   ├── main.ts  <span class="token comment"># Vue 应用入口文件</span></span>
<span class="line">    │   └── style.css  <span class="token comment"># 全局样式文件</span></span>
<span class="line">    ├── vite-env.d.ts  <span class="token comment"># Vite 环境类型声明文件</span></span>
<span class="line">    ├── .gitignore  <span class="token comment"># Git 忽略文件配置</span></span>
<span class="line">    ├── electron-builder.json5  <span class="token comment"># Electron 打包配置文件</span></span>
<span class="line">    ├── index.html  <span class="token comment"># 应用的 HTML 入口文件</span></span>
<span class="line">    ├── package.json  <span class="token comment"># 项目配置文件，包含项目信息、依赖和脚本等</span></span>
<span class="line">    ├── README.md  <span class="token comment"># 项目说明文档</span></span>
<span class="line">    ├── tsconfig.json  <span class="token comment"># TypeScript 配置文件</span></span>
<span class="line">    ├── tsconfig.node.json  <span class="token comment"># Node.js 环境下的 TypeScript 配置文件</span></span>
<span class="line">    └── vite.config.ts  <span class="token comment"># Vite 配置文件，用于构建和开发服务器配置</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7))])}const k=i(r,[["render",u]]),g=JSON.parse('{"path":"/docs/Electron/start.html","title":"启动！","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":1747181907000,"updatedTime":1747181907000,"contributors":[{"name":"AnteRay666","email":"3458403927@qq.com","commits":1}]},"filePathRelative":"docs/Electron/start.md"}');export{k as comp,g as data};
